<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>
<plugin
  name="Hadars_identify"
  author="Hadar"
  id="a92c40f4114e1d08f4c121ed"
  language="Lua"
  purpose="identify script that will at some point update hadar.ninja"
  save_state="y"
  date_written="2020-01-01 00:00:00"
  requires="4.00"
  version="2.16"
  >

</plugin>

<triggers>

<trigger
  enabled="n"
  match="^\+-*\+$"
  omit_from_output="y"
  regexp="y"
  group="idCap"
  sequence="100"
  >
</trigger>

<trigger
  enabled="y"
  match="^Auction: \w+ is auctioning .* \(Level \d+, Num (\d+)\)\. Current bid is [0-9,]+\.$"
  omit_from_output="n"
  regexp="y"
  script="autoidenta"
  sequence="100"
  >
</trigger>

<trigger
  enabled="y"
  match="^Market\: \w+ is selling .* \(Level \d+, Num (\d+)\)\. Auction is for \w+\.$"
  omit_from_output="n"
  regexp="y"
  script="autoidentl"
  sequence="100"
  >
</trigger>

<trigger
  enabled="n"
  match="^Current bid on this item is .* \(No bid yet\)\.$"
  omit_from_output="y"
  regexp="y"
  sequence="100"
  group="idCap"
  >
</trigger>

<trigger
   enabled="n"
   match="^\|(.*)\|"
   omit_from_output="y"
   regexp="y"
   group="idCap"
   script="infoCap"
   sequence="100"
   keep_evaluating="y"
  >
</trigger>

<trigger
   enabled="y"
   match="^Remort Auction: \w+ is selling .* \(Num (\d+)\)\.$"
   omit_from_output="n"
   regexp="y"
   script="autoidentr"
   sequence="100"
  >
</trigger>

<trigger
   enabled="y"
   match="^A full appraisal will reveal further information on this item\.$"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
</trigger>


</triggers>

<!-- Alias
<alias
   script=""
   match=""
   enabled="y"
   regexp="y"
   group=""
   sequence="100"
  >
  </alias>
  
  <aliases>
</aliases>
 -->
 <aliases>
   <alias
   match="^hid$"
   enabled="y"
   regexp="y"
   sequence="100"
   send_to="12"
   script="HadarHelp"
  >
  </alias>
  <alias
   match="^hid (.*)?"
   enabled="y"
   regexp="y"
   sequence="100"
   send_to="12"
   script="hidMain"
  >
  </alias>
  <alias match="^had help$"
	enabled="y"
	sequence="100"
	send_to="12"
	regexp="y"
	keep_evaluating="y"
	>
	<send>
		HadarHelp()
	</send>
	</alias>
</aliases>



<script>
<![CDATA[
require "serialize"
require "tprint"

dofile(GetInfo(60) .. "aardwolf_colors.lua")

local overwriteChannel = "echo"
local OldChannel = nil

totalstat = 0

function OnPluginSaveState ()
	SetVariable ("idreport", "idreport = " .. serialize.save_simple (idreport))
	SetVariable ("idpastfirstinstall", "true")
end -- function OnPluginSaveState

function hadarprint(str,level)
	level = level or "script"
	if level == "debug" and idreport.debug == 1 then
		AnsiNote(ColoursToANSI(str))
	else
		AnsiNote(ColoursToANSI(str))
	end
	
end

function OnPluginInstall ()
   	if GetVariable ("enabled") == "false" then
		ColourNote ("yellow", "", "Warning: Plugin " .. GetPluginName ().. " is currently disabled.")
		check (EnablePlugin(GetPluginID (), false))
		return
	end -- they didn't enable us last time
	
	hadarprint("@G[@CI@cd@Ce@cn@Ct@ci@Cf@ci@Ce@cr@G]@c had help (to see all of hadar's plugin helpfiles), or hid help to just see this one")
  
	OnPluginEnable ()
end

function OnPluginEnable ()

	report = {}
	idreport = {}
		
	if GetVariable ("idpastfirstinstall") == "true" then
		assert (loadstring (GetVariable ("idreport") or "")) ()
	else
		buildInitial()
	end

end

function buildInitial()

	idreport.output = "${BID:|bidnum}${RBID:|rbidnum}${LBID:|lbidnum}@c[@CID@w:@R${repid}@c]@w ${name} @CL@cvl@W:@R${lvl} ${@Ca@cvg@CD@cmg@W:@R|avedam} ${@Cw@cear@CL@coc@W:@R|wearable}${@CL@ceads @CTo@W:@R|leadsto} @G(${@CW@ceight@W:@R|weight}@G) @g[${@CC@capacity@W:@R|capacity}${ @CT@cot@CW@ceight@w:@R|totweight}${ @CW@ceight@CR@ceduction@W:@R|weightred}${@CH@cr@W:@R|hr}${ @CD@cr@W:@R|dr}${ @CI@cnflicts@W:@R|inflicts}${ @CS@cpecials@W:@R|specials}${@CU@cse@W:@R|spelluse}${ @CN@came@W:@R|spellname}${ @CL@cevel@W:@R|spelllevel}${ @CT@cot@CS@ctats@W:@R|totalstat}${ @CS@ctr@W:@R|str}${ @CI@cnt@W:@R|int}${ @CW@cis@W:@R|wis}${ @CD@cex@W:@R|dex}${ @CC@con@W:@R|con}${ @CL@cuck@W:@R|luck}${ @Cp@coints@W:@R|score}@g]@w @G(@w${enchantsolid}${enchantreso}${enchantillum}@G)@w"
     
     
	idreport.maxid = 25
	idreport.currentid = 1
	idreport.annoying = "no"
	idreport.channel = "echo"
	idreport.autoid = "yes"
	report.bidnum = 0
	report.rbidnum = 0
	report.lbidnum = 0
	idreport.iddebug = 0 --change this to 1 if you want to 100% reset your scripts variables
	
end

function hidMain(n,l,w)
	local first, rest = w[1]:match("([0-9.a-zA-Z]*)%s*(.*)")

	
     if first == nil or first == "" or first == " " then
          HadarHelp()
          return
     end
     
     first = tonumber(first) or string.lower(first)
     

	if first == "help" then
    HadarHelp(rest)
	elseif first == "channel" then
		setreportchannel(rest)
	elseif first == "autoid" then
		toggleAutoID()
  elseif first == "words" then
    setreportwords()
  elseif first == "beep" then
    toggleannoying()
  elseif first == "set" then
    setOutput()
  elseif first == "max" then
    idmax(rest)
  elseif first == "reset" then
    hadarreset()
  elseif first == "fullreset" then
    if rest == "confirm" then
      hadarresetfull()
    else
      hadarprint("@yIf you are sure you would to fully reset and lose all data please do: @Rhid fullreset confirm")
    end
  elseif first == "all" then
    showid("all","blank")
  elseif first == "id" then
    EnableTriggerGroup("idCap", true)
		SendSpecial("identify "..rest)
  elseif first == "lbid" then
    hidlbid(rest)
  elseif first == "bid" then
    hidbid(rest)
  elseif first == "rbid" then
    hidrbid(rest)
  elseif type(first) == "number" then
    showid(first,rest)
  else
    EnableTriggerGroup("idCap", true)
    totalstat = 0
    local blegh, megh = rest:match("([0-9.a-zA-Z]*)%s*(.*)")
    if blegh == "worn" then
      --SendNoEcho("identify "..first.." worn")
      Send ("id "..first.." worn")
      if megh == nil or megh == "" or mwgh == " " then
        overwriteChannel = idreport.channel
      else
        overwriteChannel = megh
      end
      return
    else
      --SendNoEcho("identify "..first)
      Send("identify "..first)
    end
          
    if rest == nil or rest == "" or rest == " " then
      overwriteChannel = idreport.channel
    else
      overwriteChannel = rest
    end
	end

end --end of qpsgoalMain() 


function hadarreset()
     hadarprint("@Yif this was a mistake your output was:@W")
     print(idreport.output)
     idreport.output = "${@GBID:@w|bidnum}${RBID:|rbidnum}${LBID:|lbidnum}@c[@CID@w:@R${repid}@c]@w ${name} @CL@cvl@W:@R${lvl} ${@Ca@cvg@CD@cmg@W:@R|avedam} ${@Cw@cear@CL@coc@W:@R|wearable}${@CL@ceads @CTo@W:@R|leadsto} @G(${@CW@ceight@W:@R|weight}@G) @g[${@CC@capacity@W:@R|capacity}${ @CT@cot@CW@ceight@w:@R|totweight}${ @CW@ceight@CR@ceduction@W:@R|weightred}${@CH@cr@W:@R|hr}${ @CD@cr@W:@R|dr}${ @CI@cnflicts@W:@R|inflicts}${ @CS@cpecials@W:@R|specials}${@CU@cse@W:@R|spelluse}${ @CN@came@W:@R|spellname}${ @CL@cevel@W:@R|spelllevel}${ @CT@cot@CS@ctats@W:@R|totalstat}${ @CI@cnt@W:@R|int}${ @CW@cis@W:@R|wis}${ @CD@cex@W:@R|dex}${ @CC@con@W:@R|con}${ @CL@cuck@W:@R|luck}${ @Cp@coints@W:@R|score}@g]@w @G(@w${enchantsolid}${enchantreso}${enchantillum}@G)@w"
     hadarprint("@CReport output set to original")
end

function hadarresetfull()
     report = {}
	idreport = {}
     
     idreport.output = "${BID:|bidnum}${RBID:|rbidnum}${LBID:|lbidnum}@c[@CID@w:@R${repid}@c]@w ${name} @CL@cvl@W:@R${lvl} ${@Ca@cvg@CD@cmg@W:@R|avedam} ${@Cw@cear@CL@coc@W:@R|wearable}${@CL@ceads @CTo@W:@R|leadsto} @G(${@CW@ceight@W:@R|weight}@G) @g[${@CC@capacity@W:@R|capacity}${ @CT@cot@CW@ceight@w:@R|totweight}${ @CW@ceight@CR@ceduction@W:@R|weightred}${@CH@cr@W:@R|hr}${ @CD@cr@W:@R|dr}${ @CI@cnflicts@W:@R|inflicts}${ @CS@cpecials@W:@R|specials}${@CU@cse@W:@R|spelluse}${ @CN@came@W:@R|spellname}${ @CL@cevel@W:@R|spelllevel}${ @CT@cot@CS@ctats@W:@R|totalstat}${ @CS@ctr@W:@R|str}${ @CI@cnt@W:@R|int}${ @CW@cis@W:@R|wis}${ @CD@cex@W:@R|dex}${ @CC@con@W:@R|con}${ @CL@cuck@W:@R|luck}${ @Cp@coints@W:@R|score}@g]@w @G(@w${enchantsolid}${enchantreso}${enchantillum}@G)@w"
     
     
	idreport.maxid = 25
	idreport.currentid = 1
	idreport.annoying = "no"
	idreport.channel = "echo"
	idreport.autoid = "yes"
	report.bidnum = 0
	report.rbidnum = 0
	report.lbidnum = 0
	idreport.iddebug = 0 --change this to 1 if you want to 100% reset your scripts variables
     hadarprint("@CReport script fully reset")
end


function interp(s, tab)

local stringone = nil
local stringtwo = nil
local workingon = 0

		return (s:gsub('($%b{})',
			function(w)
				if w:find("|") then
					for i,v in pairs(utils.split(triminterp(w),"|")) do
						if i == 1 and tab[v] ~= nil then
							if v == "score" and tonumber(tab[v]) > 0 then
								stringone = tab[v]
								workingon = 1
							elseif v ~= "score" then
								stringone = tab[v]
								workingon = 1
                                   end
						elseif i == 2 and stringone ~= nil and workingon == 1 then
							return stringone .. v
						elseif i == 1 and tab[v] == nil then
							stringtwo = v
							workingon = 2
						elseif i == 2 and stringtwo ~= nil and tab[v] ~= nil and workingon == 2 then
							if v == "score" and tonumber(tab[v]) > 0 then
								return stringtwo .. tab[v]
							elseif v ~= "score" then
								return stringtwo .. tab[v]
							end
                              else
							--print("could not find I:"..i .." V:" .. v)
						end
					end
				else
					return tab[w:sub(3, -2)] or ""
				end --end of if function inside gsub
				return w:gsub("[%$%{%A+%a+|%}]","")
			end)) -- end of gsub
end --end of interp function

function triminterp(s)
			local string
			string = s:gsub("[%$%{%}]","")
			return(string)
end

function infoCap(name, line, wildcards, styles)

	if string.find(wildcards[1],"Name%s+:") then
		local cname = StylesToColoursOneLine(styles)
          local lastnum = 0
		
          
          if string.find(cname, " |") then
               lastnum = string.find(cname, " |")
          else
               lastnum = string.find(cname, " @w|")
          end
          
		report.coloredname = Trim(string.sub(cname,string.find(cname, ":")+1,lastnum))
	end


--original person to write all this was durel did not want to re-write so borrowed
  local isPartialId, id, name, level, weight, wearable, score, keywords, itemType, worth, flags,
        affectMods, continuation, material, foundAt, ownedBy, clan, rawMaterial

  isPartialId = string.find(line, "A full appraisal will reveal further information on this item")

  _, _, id = string.find(line, "Id%s+:%s+(%d+)%s+")
  _, _, name = string.find(line, "Name%s+:%s+(.+)%s+|")
  _, _, level = string.find(line, "Level%s+:%s+(%d+)%s+")
  _, _, weight = string.find(line, "Weight%s+:%s+([0-9,-]+)%s+")
  _, _, wearable = string.find(line, "Wearable%s+:%s+(.*) %s+")
  _, _, score = string.find(line, "Score%s+:%s([0-9,]+)%s+")
  _, _, keywords = string.find(line, "Keywords%s+:%s+(.-)%s+|")
  _, _, itemType = string.find(line, "| Type%s+:%s+(%a+)%s+")
  _, _, rawMaterial = string.find(line, "| Type%s+:%s+(Raw material:%a+)")

  _, _, worth = string.find(line, "Worth%s+:%s+([0-9,]+)%s+")
  _, _, flags = string.find(line, "Flags%s+:%s+(.-)%s+|")
  _, _, affectMods = string.find(line, "Affect Mods:%s+(.-)%s+|")
  _, _, continuation = string.find(line, "|%s+:%s+(.-)%s+|")
  _, _, material = string.find(line, "Material%s+:%s+(.*)%s+")
  _, _, foundAt = string.find(line, "Found at%s+:%s+(.-)%s+|")
  _, _, ownedBy = string.find(line, "Owned By%s+:%s+(.-)%s+|")
  _, _, clan = string.find(line, "Clan Item%s+:%s+(.-)%s+|")

  -- Potions, pills, wands, and staves
  local spellUses, spellLevel, spellName
  _, _, spellUses, spellLevel, spellName = string.find(line, "([0-9]+) uses? of level ([0-9]+) '(.*)'")

  -- Portal-only fields
  local leadsTo
  _, _, leadsTo = string.find(line, "Leads to%s+:%s+(.*)%s+")

  -- Container-only fields
  local capacity, holding, heaviestItem, itemsInside, totWeight, itemBurden, weightReduction
  _, _, capacity = string.find(line, "Capacity%s+:%s+([0-9,]+)%s+")
  _, _, holding = string.find(line, "Holding%s+:%s+([0-9,]+)%s+")
  _, _, heaviestItem = string.find(line, "Heaviest Item:%s+([0-9,]+)%s+")
  _, _, itemsInside = string.find(line, "Items Inside%s+:%s+([0-9,]+)%s+")
  _, _, totWeight = string.find(line, "Tot Weight%s+:%s+([0-9,-]+)%s+")
  _, _, itemBurden = string.find(line, "Item Burden%s+:%s+([0-9,]+)%s+")
  _, _, weightReduction = string.find(line, "Items inside weigh (%d+). of their usual weight%s+")

  local int, wis, luck, str, dex, con
  _, _, int = string.find(line, "Intelligence%s+:%s+([+-]?%d+)%s+")
  _, _, wis = string.find(line, "Wisdom%s+:%s+([+-]?%d+)%s+")
  _, _, luck = string.find(line, "Luck%s+:%s+([+-]?%d+)%s+")
  _, _, str = string.find(line, "Strength%s+:%s+([+-]?%d+)%s+")
  _, _, dex = string.find(line, "Dexterity%s+:%s+([+-]?%d+)%s+")
  _, _, con = string.find(line, "Constitution%s+:%s+([+-]?%d+)%s+")

  local hp, mana, moves
  _, _, hp = string.find(line, "Hit points%s+:%s+([+-]?%d+)%s+")
  _, _, mana = string.find(line, "Mana%s+:%s+([+-]?%d+)%s+")
  _, _, moves = string.find(line, "Moves%s+:%s+([+-]?%d+)%s+")

  local hit, dam
  _, _, hit = string.find(line, "Hit roll%s+:%s+([+-]?%d+)%s+")
  _, _, dam = string.find(line, "Damage roll%s+:%s+([+-]?%d+)%s+")

  local allphys, allmagic
  _, _, allphys = string.find(line, "All physical%s+:%s+([+-]?%d+)%s+")
  _, _, allmagic = string.find(line, "All magic%s+:%s+([+-]?%d+)%s+")

  local acid, cold, energy, holy, electric, negative, shadow, magic, air, earth, fire, light, mental,
        sonic, water, poison, disease
  _, _, acid = string.find(line, "Acid%s+:%s+([+-]?%d+)%s+")
  _, _, cold = string.find(line, "Cold%s+:%s+([+-]?%d+)%s+")
  _, _, energy = string.find(line, "Energy%s+:%s+([+-]?%d+)%s+")
  _, _, holy = string.find(line, "Holy%s+:%s+([+-]?%d+)%s+")
  _, _, electric = string.find(line, "Electric%s+:%s+([+-]?%d+)%s+")
  _, _, negative = string.find(line, "Negative%s+:%s+([+-]?%d+)%s+")
  _, _, shadow = string.find(line, "Shadow%s+:%s+([+-]?%d+)%s+")
  _, _, magic = string.find(line, "Magic%s+:%s+([+-]?%d+)%s+")
  _, _, air = string.find(line, "Air%s+:%s+([+-]?%d+)%s+")
  _, _, earth = string.find(line, "Earth%s+:%s+([+-]?%d+)%s+")
  _, _, fire = string.find(line, "Fire%s+:%s+([+-]?%d+)%s+")
  _, _, light = string.find(line, "Light%s+:%s+([+-]?%d+)%s+")
  _, _, mental = string.find(line, "Mental%s+:%s+([+-]?%d+)%s+")
  _, _, sonic = string.find(line, "Sonic%s+:%s+([+-]?%d+)%s+")
  _, _, water = string.find(line, "Water%s+:%s+([+-]?%d+)%s+")
  _, _, poison = string.find(line, "Poison%s+:%s+([+-]?%d+)%s+")
  _, _, disease = string.find(line, "Disease%s+:%s+([+-]?%d+)%s+")

  local slash, pierce, bash
  _, _, slash = string.find(line, "Slash%s+:%s+([+-]?%d+)%s+")
  _, _, pierce = string.find(line, "Pierce%s+:%s+([+-]?%d+)%s+")
  _, _, bash = string.find(line, "Bash%s+:%s+([+-]?%d+)%s+")

  local avedam, inflicts, damtype, weaponType, specials
  _, _, avedam = string.find(line, "Average Dam%s+:%s+(%d+)%s+")
  _, _, inflicts = string.find(line, "Inflicts%s+:%s+(%a+)%s+")
  _, _, damtype = string.find(line, "Damage Type%s+:%s+(%a+)%s+")
  _, _, weaponType = string.find(line, "Weapon Type:%s+(%a+)%s+")
  _, _, specials = string.find(line, "Specials%s+:%s+(%a+)%s+")

  local tmpAvedam, tmpHR, tmpDR, tmpInt, tmpWis, tmpLuck, tmpStr, tmpDex, tmpCon
  _, _, tmpAvedam = string.find(line, ":%s+adds [+-](%d+) average damage%s+")
  _, _, tmpHR = string.find(line, ":%s+hit roll [+-](%d+)")
  _, _, tmpDR = string.find(line, ":%s+damage roll [+-](%d+)")
  _, _, tmpInt = string.find(line, ":%s+intelligence [+-](%d+)")
  _, _, tmpWis = string.find(line, ":%s+wisdom [+-](%d+)")
  _, _, tmpLuck = string.find(line, ":%s+luck [+-](%d+)")
  _, _, tmpStr = string.find(line, ":%s+strength [+-](%d+)")
  _, _, tmpDex = string.find(line, ":%s+dexterity [+-](%d+)")
  _, _, tmpCon = string.find(line, ":%s+constitution [+-](%d+)")

  if (id ~= nil) then
    report.Id = id
  end -- if

  if (name ~= nil) then
    report.Name = name
	beannoying(name)
  end -- if

  if (level ~= nil) then
    report.Level = level
  end -- if

  if (weight ~= nil) then
    report.Weight = weight
  end -- if

  if (wearable ~= nil) then
    wearable = Trim(wearable)
    report.Wearable = wearable
  end -- if

  if (score ~= nil) then
    report.Score = score
  end -- if

  if (keywords ~= nil) then
    report.Keywords = keywords
  end -- if

  if (itemType ~= nil) or (rawMaterial ~= nil) then
    if (rawMaterial ~= nil) then
      itemType = string.gsub(rawMaterial, "Raw material", "RawMaterial")
    end -- if

    report.Type = itemType
  end -- if

  if (worth ~= nil) then
    report.Worth = worth
  end -- if

	if (isPartialId ~= nil) then
		report.IdentifyLevel = "LevelPartial"
	end -- if

	if (flags ~= nil) then
		report.Flags = flags
		-- If the flags are continued (they end in a ",") watch for the continuation
		if (string.find(flags, ",$")) then
			flagsContinuation = true
		else
			flagsContinuation = false
			makeEnchantmentstuff()
		end -- if
	end -- if

	if (affectMods ~= nil) then
		report.AffectMods = affectMods
		-- If the affectMods are continued (they end in a ",") watch for the continuation
		if (string.find(affectMods, ",$")) then
			affectModsContinuation = true
		else
			affectModsContinuation = false
		end -- if
	end -- if

	if (continuation ~= nil) then

		if (flagsContinuation) then
			-- Add the continuation to the existing flags
			report.Flags = report.Flags .. " " .. continuation

			-- If the continued flags end in a comma, keep the continuation going; otherwise stop it
			if not (string.find(continuation, ",$")) then
				flagsContinuation = false
				makeEnchantmentstuff()
			end -- if
		elseif (affectModsContinuation) then
		-- Add the continuation to the existing affectMods

			report.AffectMods = report.AffectMods .. " " .. continuation

		-- If the continued affectMods end in a comma, keep the continuation going; otherwise stop it
			if not (string.find(continuation, ",$")) then
				affectModsContinuation = false
			end -- if
		else
      -- Placeholder to add continuation support for other things (notes? others?)
		end -- if
	end -- if

  if (material ~= nil) then
    material = Trim(material)
    report.Material = material
  end -- if

  if (foundAt ~= nil) then
    report.FoundAt = foundAt
  end -- if

  if (ownedBy ~= nil) then
    report.OwnedBy = ownedBy
  end -- if

  if (clan ~= nil) then
    report.Clan = clan
  end -- if

  if (spellUses ~= nil) and (spellLevel ~= nil) and (spellName ~= nil) then
    report.spellsName = spellName
	report.spellsUses = spellUses
	report.spellsLevel = spellLevel
  end -- if

  if (leadsTo ~= nil) then
    leadsTo = Trim(leadsTo)
    report.LeadsTo = leadsTo
  end -- if

  -- Container stats
  if (capacity ~= nil) then
    report.Capacity = capacity
  end -- if

  if (holding ~= nil) then
    report.Holding = holding
  end -- if

  if (heaviestItem ~= nil) then
    report.HeaviestItem = heaviestItem
  end -- if

  if (itemsInside ~= nil) then
    report.ItemsInside = itemsInside
  end -- if

  if (totWeight ~= nil) then
    report.TotWeight = totWeight
  end -- if

  if (itemBurden ~= nil) then
    report.ItemBurden = itemBurden
  end -- if

  if (weightReduction ~= nil) then
    report.WeightReduction = weightReduction
  end -- if

  if (int ~= nil) then
    report.Int = int
    totalstat = totalstat + tonumber(int)
  end -- if

  if (wis ~= nil) then
    report.Wis = wis
    totalstat = totalstat + tonumber(wis)
  end -- if

  if (luck ~= nil) then
    report.Luck = luck
    totalstat = totalstat + tonumber(luck)
  end -- if

  if (str ~= nil) then
    report.Str = str
    totalstat = totalstat + tonumber(str)
  end -- if

  if (dex ~= nil) then
    report.Dex = dex
    totalstat = totalstat + tonumber(dex)
  end -- if

  if (con ~= nil) then
    report.Con = con
    totalstat = totalstat + tonumber(con)
  end -- if

  if (totalstat > 0 or totalstat < 0) then
    report.totalstat = totalstat
  end -- if

  if (hp ~= nil) then
    report.HP = hp
  end -- if

  if (mana ~= nil) then
    report.Mana = mana
  end -- if

  if (moves ~= nil) then
    report.Moves = moves
  end -- if

  if (hit ~= nil) then
    report.Hit = hit
  end -- if

  if (dam ~= nil) then
    report.Dam = dam
  end -- if

  if (allphys ~= nil) then
    report.AllPhys = allphys
  end -- if

  if (allmagic ~= nil) then
    report.AllMagic = allmagic
  end -- if

  if (acid ~= nil) then
    report.Acid = acid
    if report.resistAll == nil then
          report.resistAll = "Acid:"..acid
     else
          report.resistAll = report.resistAll.." ,Acid:"..acid
    end
  end -- if

  if (cold ~= nil) then
    report.Cold = cold
    if report.resistAll == nil then
          report.resistAll = "Cold:"..cold
    else
          report.resistAll = report.resistAll.." ,Cold:"..cold
    end
  end -- if

  if (energy ~= nil) then
    report.Energy = energy
    if report.resistAll == nil then
          report.resistAll = "Energy:"..energy
     else
          report.resistAll = report.resistAll.." ,Energy:"..energy
    end
  end -- if

  if (holy ~= nil) then
    report.Holy = holy
     if report.resistAll == nil then
          report.resistAll = "Holy:"..holy
     else
          report.resistAll = report.resistAll.." ,Holy:"..holy
    end
  end -- if

  if (electric ~= nil) then
    report.Electric = electric
        if report.resistAll == nil then
          report.resistAll = "Electric:"..electric
     else
          report.resistAll = report.resistAll.." ,Electric:"..electric
    end
  end -- if

  if (negative ~= nil) then
    report.Negative = negative
        if report.resistAll == nil then
          report.resistAll = "Negative:"..negative
     else
          report.resistAll = report.resistAll.." ,Negative:"..negative
    end
  end -- if

  if (shadow ~= nil) then
    report.Shadow = shadow
        if report.resistAll == nil then
          report.resistAll = "Shadow:"..shadow
     else
          report.resistAll = report.resistAll.." ,Shadow:"..shadow
    end
  end -- if

  if (magic ~= nil) then
    report.Magic = magic
        if report.resistAll == nil then
          report.resistAll = "Magic:"..magic
     else
          report.resistAll = report.resistAll.." ,Magic:"..magic
    end
  end -- if

  if (air ~= nil) then
    report.Air = air
        if report.resistAll == nil then
          report.resistAll = "Air:"..air
     else
          report.resistAll = report.resistAll.." ,Air:"..air
    end
  end -- if

  if (earth ~= nil) then
    report.Earth = earth
        if report.resistAll == nil then
          report.resistAll = "Earth:"..earth
     else
          report.resistAll = report.resistAll.." ,Earth:"..earth
    end
  end -- if

  if (fire ~= nil) then
    report.Fire = fire
        if report.resistAll == nil then
          report.resistAll = "Fire:"..fire
     else
          report.resistAll = report.resistAll.." ,Fire:"..fire
    end
  end -- if

  if (light ~= nil) then
    report.Light = light
        if report.resistAll == nil then
          report.resistAll = "Light:"..light
     else
          report.resistAll = report.resistAll.." ,Light:"..light
    end
  end -- if

  if (mental ~= nil) then
    report.Mental = mental
        if report.resistAll == nil then
          report.resistAll = "Mental:"..mental
     else
          report.resistAll = report.resistAll.." ,Mental:"..mental
    end
  end -- if

  if (sonic ~= nil) then
    report.Sonic = sonic
        if report.resistAll == nil then
          report.resistAll = "sonic:"..sonic
     else
          report.resistAll = report.resistAll.." ,Sonic:"..sonic
    end
  end -- if

  if (water ~= nil) then
    report.Water = water
        if report.resistAll == nil then
          report.resistAll = "Water:"..water
     else
          report.resistAll = report.resistAll.." ,Water:"..water
    end
  end -- if

  if (poison ~= nil) then
    report.Poison = poison
        if report.resistAll == nil then
          report.resistAll = "Poison:"..poison
     else
          report.resistAll = report.resistAll.." ,Poison:"..poison
    end
  end -- if

  if (disease ~= nil) then
    report.Disease = disease
        if report.resistAll == nil then
          report.resistAll = "Disease:"..disease
     else
          report.resistAll = report.resistAll.." ,Disease:"..disease
    end
  end -- if

  if (slash ~= nil) then
    report.Slash = slash
        if report.resistAll == nil then
          report.resistAll = "Slash:"..slash
     else
          report.resistAll = report.resistAll.." ,Slash:"..slash
    end
  end -- if

  if (pierce ~= nil) then
    report.Pierce = pierce
        if report.resistAll == nil then
          report.resistAll = "Pierce:"..pierce
     else
          report.resistAll = report.resistAll.." ,Pierce:"..pierce
    end
  end -- if

  if (bash ~= nil) then
    report.Bash = bash
        if report.resistAll == nil then
          report.resistAll = "Bash:"..bash
     else
          report.resistAll = report.resistAll.." ,Bash:"..bash
    end
  end -- if

  if (avedam ~= nil) then
    report.AveDam = avedam
  end -- if

  if (tmpAvedam ~= nil) then
    report.tempAveDam = tmpAvedam
  end -- if

  if (tmpHR ~= nil) then
    report.tmpHit = tmpHR
  end -- if

  if (tmpDR ~= nil) then
    report.tmpDam = tmpDR
  end -- if

  if (tmpInt ~= nil) then
    report.tmpInt = tmpInt
  end -- if

  if (tmpWis ~= nil) then
    report.tmpWis = tmpWis
  end -- if

  if (tmpLuck ~= nil) then
    report.tmpLuck = tmpLuck
  end -- if

  if (tmpStr ~= nil) then
    report.tmpStr = tmpStr
  end -- if

  if (tmpDex ~= nil) then
    report.tmpDex = tmpDex
  end -- if

  if (tmpCon ~= nil) then
    report.tmpCon = tmpCon
  end -- if

  if (inflicts ~= nil) then
    report.Inflicts = inflicts
  end -- if

  if (damtype ~= nil) then
    report.DamType = damtype
  end -- if

  if (weaponType ~= nil) then
    report.WeaponType = weaponType
  end -- if

  if (specials ~= nil) then
    report.Specials = specials
  end -- if
  
	AddTimer ("makeidoutput", 0, 0, .1, "", timer_flag.Enabled + timer_flag.OneShot, "makeOutput") 
end --end infocap

function makeEnchantmentstuff()
if not string.find(report.Flags, "solidified") then
			if not string.find(report.Flags, "invis") then
				report.enchantingSolid = "@RS@w"
				report.enchantingSolidno = "S"
				if report.enchanting == nil then
					report.enchanting = "@RS@w"
				else
					report.enchanting = report.enchanting .. "@RS@w"
				end
			else
				report.enchantingSolid = "@GS@w"
				report.enchantingSolidyes = "S"
				if report.enchanting == nil then
					report.enchanting = "@GS@w"
				else
					report.enchanting = report.enchanting .. "@GS@w"
				end
			end
		end
		if not string.find(report.Flags, "resonated") then
			if string.find(report.Flags, "hum") then
				report.enchantingReso = "@RR@w"
				report.enchantingResono = "R"
				if report.enchanting == nil then
					report.enchanting = "@GR@W"
				else
					report.enchanting = report.enchanting .. "@RR@W"
				end
			else
				report.enchantingReso = "@GR@w"
				report.enchantingResoyes = "R"
				if report.enchanting == nil then
					report.enchanting = "@GR@W"
				else
					report.enchanting = report.enchanting .. "@GR@W"
				end
			end
		end
		if not string.find(report.Flags, "illuminated") then
				report.enchantingIllum = "@RI@w"
				report.enchantingIllumno = "I"
			if string.find(report.Flags, "glow") then
				if report.enchanting == nil then
					report.enchanting = "@RI@W"
				else
					report.enchanting = report.enchanting .. "@RI@W"
				end
			else
				report.enchantingIllum = "@GI@w"
				report.enchantingIllumyes = "I"
				if report.enchanting == nil then
					report.enchanting = "@GI@W"
				else
					report.enchanting = report.enchanting .. "@GI@W"
				end
			end
		end
end


function makeOutput()
		local msg = interp(idreport.output,{
    id = report.Id
    , repid = idreport.currentid
		, name = report.coloredname
		, lvl = report.Level
		, weight = report.Weight
		, wearable = report.Wearable
		, score = report.Score
		, keywords = report.Keywords
		, type = report.Type
		, worth = report.Worth
		, totalstat = report.totalstat
		, material = report.Material
		, affmod = report.AffectMods
		, foundat = report.FoundAt
		, spelluse = report.spellsUses
		, spellname = report.spellsName
		, spelllevel = report.spellsLevel
		, leadsto = report.LeadsTo
		, capacity = report.Capacity
		, holding = report.Holding
		, heavyitem = report.HeaviestItem
		, itemsinside = report.ItemsInside
		, totweight = report.TotWeight
		, itemburden = report.ItemBurden
		, weightred = report.WeightReduction
		, clan = report.Clan
    , str = report.Str
		, int = report.Int
		, wis = report.Wis
		, dex = report.Dex
		, con = report.Con
		, luck = report.Luck
		, hp = report.HP
		, mana = report.Mana
		, move = report.Moves
		, hr = report.Hit
		, dr = report.Dam
		, allphys = report.AllPhys
		, allmagic = report.AllMagic
		, tempint = report.tmpInt
		, tempwis = report.tmpWis
		, tempdex = report.tmpDex
		, tempcon = report.tmpCon
		, templuck = report.tmpLuck
		, inflicts = report.Inflicts
		, damtype = report.DamType
		, weapontype = report.WeaponType
		, specials = report.Specials
		, flagsall = report.Flags
		, flagsenchant = report.enchanting
    , resistall = report.resistAll
		, acid = report.Acid
		, cold = report.Cold
		, energy = report.Energy
		, holy = report.Holy
		, electric = report.Electric
		, negative = report.Negative
		, shadow = report.Shadow
		, magic = report.Magic
		, air = report.Air
		, earth = report.Earth
		, fire = report.Fire
		, light = report.Light
		, mental = report.Mental
		, sonic = report.Sonic
		, water = report.Water
		, poison = report.Poison
		, disease = report.Disease
		, slash = report.Slash
		, pierce = report.Pierce
		, bash = report.Bash
		, avedam = report.AveDam
		, tmpAvedam = report.tempAveDam
		, enchantsolid = report.enchantingSolid
		, enchantsolidyes = report.enchantSolidyes
		, enchantsolidno = report.enchantSolidno
		, enchantreso = report.enchantingReso
		, enchantresoyes = report.enchantResoyes
		, enchantresono = report.enchantResono
		, enchantillum = report.enchantingIllum
		, enchantillumyes = report.enchantIllumyes
		, enchantillumno = report.enchantIllumno
    , bidnum = report.bidNum
    , rbidnum = report.rbidNum
    , lbidnum = report.lbidNum
	})
     
     OldChannel = idreport.channel
     idreport.channel = overwriteChannel

     
		
	if tonumber(idreport.currentid)<=tonumber(idreport.maxid) then
		idreport[idreport.currentid] = msg
		idreport.currentid = tonumber(idreport.currentid)+1
	else
          idreport[1] = msg
		idreport.currentid = 2
	end
     
	SendSpecial(idreport.channel .. " " .. msg)

     idreport.channel = OldChannel
     overwriteChannel = OldChannel
     OldChannel = nil
    
     
     
	report.bidnum = 0
	report.rbidnum = 0
	report.lbidnum = 0
     report.resistAll = nil
	EnableTriggerGroup("idCap", false)
	report = {}
end--end makeOutput()

function showid(id, params)

     local showidchannel = "echo"

     if params ~= nil and params ~= " " and params ~= "" then
          showidchannel = params
     end

	if id == "all" then
		for i,v in pairs(idreport) do
			if tonumber(i) and tonumber(i) <= tonumber(idreport.maxid) then
				AnsiNote(stylesToANSI(ColoursToStyles("@WID: "..i.." Has data: @C".. v)))
			end
		end
	elseif tonumber(id) >= 1  and tonumber(id) <= idreport.maxid then
		if idreport[tonumber(id)] ~= nil then
			SendSpecial(showidchannel .. " " .. idreport[tonumber(id)])
		else
			print("that does not exist, please try a different number")
		end
	else
		print("Please enter a valid answer, either all or a number between 1 and " .. idreport.maxid)
	end
end

function setreportchannel(params)

     if type(params)~="string" then
          return
     end
     
	if params ~= nil and params ~= "" and params ~= " " then
		idreport.channel = params
          hadarprint("@cLevel Report channel set to @G"..idreport.channel)
	else
		hadarprint("@cYour current channel is @G"..idreport.channel)
          hadarprint("@cTo set channel please do hid channel <channelname>")
	end
end

function beannoying(rawr)
	rawr = rawr:gsub("%s+", ",")
	if idreport.annoying == "yes" and isinList(rawr) then
		Sound("ding.wav")
		DoAfterSpecial(0.5, 'Sound("ding.wav")', sendto.script)
		DoAfterSpecial(1, 'Sound("ding.wav")', sendto.script)
		FlashIcon()
		DoAfterSpecial(0.5, 'FlashIcon()', sendto.script)
		DoAfterSpecial(1, 'FlashIcon()', sendto.script)
	end
end

function toggleannoying()
	if idreport.annoying == "yes" then
		idreport.annoying = "no"
          hadarprint("@CTrigger Matching turned: @ROFF@w")
	else
		idreport.annoying = "yes"
          hadarprint("@CTrigger Matching turned: @GON@w")
	end
end

function setreportwords()
	local HadarBackup = idreport["callout"]
	idreport["callout"] = utils.inputbox ("Please put trigger words here to activate beeping\nplease seperate words with a comma \",\"", "Set trigger words", idreport["callout"], "Courier", 9)
	if idreport["callout"] ~= nil then
          hadarprint("@Cbeep trigger words are@w: "..idreport["callout"])
	else
		idreport["callout"] = HadarBackup
	end
	SaveState()
end

function isinList(str)
	if idreport["callout"] == nil or idreport["callout"] == "" or idreport["callout"] == " " then
          hadarprint("please add a word, or words to your trigger (hid word)")
		return
	end
	for i,v in pairs(utils.split(idreport["callout"],",")) do
		if string.find(string.lower(str),string.lower(v)) then
			return true
		end	
	end
end

function setOutput()
	local HadarBackup = idreport.output
	idreport.output = utils.inputbox ("This has a ton of variables, i suggest looking at hid help and going to the website","Look of hadars Identification", idreport.output, "Courier", 9)
	if idreport.output ~= nil then
          hadarprint("id report has the following format:"..idreport.output)
	else
		idreport.output = HadarBackup
	end
	SaveState()
end

function toggleAutoID()
	if idreport.autoid == "yes" then
		idreport.autoid = "no"
          hadarprint("@CAuto-ID turned: @ROFF@w")
	else
		idreport.autoid = "yes"
          hadarprint("@CAuto-ID turned: @GON@w")
	end
end

function autoidenta(name, line, wildcards)
	if idreport.autoid == "yes" then
    totalstat = 0
		EnableTriggerGroup("idCap", true)
		report.bidNum = wildcards[1]
		SendSpecial("bid "..report.bidNum)
	end
end

function autoidentr(name, line, wildcards)
	if idreport.autoid == "yes" then
    totalstat = 0
		EnableTriggerGroup("idCap", true)
		report.rbidNum = wildcards[1]
		SendSpecial("rbid "..report.rbidNum)
	end
end

function autoidentl(name, line, wildcards)
  totalstat = 0
	if idreport.autoid == "yes" then
    EnableTriggerGroup("idCap", true)
		report.lbidNum = wildcards[1]
		SendSpecial("lbid "..report.lbidNum)
	end
end

function hidlbid(str)
  totalstat = 0
  local first, rest = str:match("(%d+)%s*(.*)")
  EnableTriggerGroup("idCap", true)
  report.lbidNum = first
  SendSpecial("lbid "..report.lbidNum)

  if rest == nil or rest == "" or rest == " " then
    overwriteChannel = idreport.channel
  else
    overwriteChannel = rest
  end
end

function hidrbid(str)
  totalstat = 0
  local first, rest = str:match("(%d+)%s*(.*)")
  EnableTriggerGroup("idCap", true)
  report.rbidNum = first
	SendSpecial("rbid "..report.rbidNum)

  if rest == nil or rest == "" or rest == " " then
    overwriteChannel = idreport.channel
  else
    overwriteChannel = rest
  end
end

function hidbid(str)
  totalstat = 0
  local first, rest = str:match("(%d+)%s*(.*)")
  EnableTriggerGroup("idCap", true)
  report.bidNum = first
	SendSpecial("bid "..report.bidNum)

  if rest == nil or rest == "" or rest == " " then
    overwriteChannel = idreport.channel
  else
    overwriteChannel = rest
  end
end

function idmax(name, line, wildcards)
	if tonumber(wildcards[1]) then
		idreport.maxid = wildcards[1]
	else
          hadarprint("@RPlease input a valid number@w")
	end
end


function HadarHelp(param)
local helpfile

if param == "" or param == " " or param == nil or param == "1" then
helpfile = [[
  @x086+----------------------------@G[@x051I@cdentify @WV:]]..GetPluginInfo (GetPluginID (), 19)..[[@g]@x086-------------------------+
  @x086|                                                                      @x086|
  @x086| @x130hid <paramaters>       @x123- @x130command to use the script                   @x086|
  @x086| @x142hid channel <channel>  @x123- @x142set channel for default reporting           @x086|
  @x086| @x130hid autoid             @x123- @x130toggle auto iding bids, rauction and market @x086|
  @x086| @x142hid beep               @x123- @x142toggle trigger words for beeps/icon flashing@x086|
  @x086| @x130hid words              @x123- @x130lets you make a list of words for idbeeps   @x086|
  @x086| @x142hid <id|all> <channel> @x123- @x142Lets you see past Ids use with hid max      @x086|
  @x086|                          @x142all shows all IDS                           @x086|
  @x086| @x130hid max <number>       @x123- @x130change the max ids to keep in history       @x086|
  @x086|                          @x130default is 20                               @x086|
  @x086| @x142hid set                @x123- @x142will let you hadarmagic the output          @x086|
  @x086|                          @x142type hid help 2 for a helpfile with variable@x086|
  @x086| @x130hid reset              @x123- @x130sets hadarmagic output back to the default  @x086|
  @x086| @x142hid fullreset          @x123- @x142resets the script to install status         @x086|
  @x086| @x130hid lbid <number> [chan]@x123- @x130will output lbid item                      @x086|
  @x086| @x142hid rbid <number> [chan]@x123- @x142will output a remort auction item          @x086|
  @x086| @x130hid bid <number> [chan] @x123- @x130will output an item up for auction         @x086|
  @x086|                                                                      @x086|
  @x086|                                                                      @x086|
  @x086| @cTo Customize the script please read the following@w:                   @x086|
  @x086| @x130hid help 2 - @x130shows the second helpfile with all the variables        @x086|
  @x086| @x142hid help 3 - @x142shows the third helpfile with variables                 @x086|
  @x086| @x130hid help 4 - @x130shows the fourth helpfile with variables                @x086|
  @x086| @x142hid help 5 - @x142shows the fifth helpfile with variables                 @x086|
  @x086| @x130hid help 6 - @x130shows the sixth helpfile with variables                 @x086|
  @x086| @x142hid help examples - @x142shows the second helpfile with all the variables @x086|
  @x086|                                                                      @x086|
  @x086| @WIf you have any issues please contact me via note/tell or on discord @x086|
  @x086+----------------------------------------------------------------------+@w]]
elseif param == "2" then
helpfile = [[
@x099+-----------------------------@g[@CI@cdentify @R2@g]@x099-----------------------------+
@x099| @x009Variable:  @x099- @x009Description:                                            @x099|
@x099| @x002id         @x099- @x002id number of the item                                   @x099|
@x099| @x010name       @x099- @x010name of the item (in color)                             @x099|
@x099| @x002lvl        @x099- @x002the level of the item                                   @x099|
@x099| @x010weight     @x099- @x010total weight of the item                                @x099|
@x099| @x002wearable   @x099- @x002location item can be worn                               @x099|
@x099| @x010score      @x099- @x010the score of an item based off your settings            @x099|
@x099| @x002keywords   @x099- @x002item keywords                                           @x099|
@x099| @x010type       @x099- @x010what is the type of item(eg armor, weapon, scroll)      @x099|
@x099| @x002worth      @x099- @x002total cost of the item                                  @x099|
@x099| @x010totalstat  @x099- @x010total stats of the item                                 @x099|
@x099| @x002material   @x099- @x002what the material is made out of                        @x099|
@x099| @x010foundat    @x099- @x010what area the item is from                              @x099|
@x099|                                                                      @x099|
@x099| @WIf you have any issues please contact me via note/tell or on discord @x099|
@x099+----------------------------------------------------------------------+@w
]]
elseif param == "3" then
     helpfile = [[
@x099+-----------------------------@g[@CI@cdentify @R3@g]@x099-----------------------------+
@x099| @x010int        @x099-@x222 shows Strength on the item                              @x099|
@x099| @x002wis        @x099-@x214 shows Wisdom on the item                                @x099|
@x099| @x010dex        @x099-@x222 shows Dexterity on the item                             @x099|
@x099| @x002con        @x099-@x214 shows Constitution stat on the item                     @x099|
@x099| @x010luck       @x099-@x222 shows Luck on the item                                  @x099|
@x099| @x002hp         @x099-@x214 shows additional health points added from an item       @x099|
@x099| @x010mana       @x099-@x222 shows additional mana added from an item                @x099|
@x099| @x002move       @x099-@x214 shows additional moves added from an item               @x099|
@x099| @x010hr         @x099-@x222 shows hit roll of an item                               @x099|
@x099| @x002dr         @x099-@x214 shows damage roll of an item                            @x099|
@x099| @x010allphys    @x099-@x222 shows resistance for all physical attacks               @x099|
@x099| @x002allmagic   @x099-@x214 shows resistance for all magic attacks                  @x099|
@x099| @x010tempint    @x099-@x222 shows temporary Strength on the item                    @x099|
@x099| @x002tempwis    @x099-@x214 shows temporary Wisdom on the item                      @x099|
@x099| @x010tempdex    @x099-@x222 shows temporary Dexterity on the item                   @x099|
@x099| @x002tempcon    @x099-@x214 shows temporary Constitution stat on the item           @x099|
@x099| @x010templuck   @x099-@x222 shows temporary Luck on the item                        @x099|
@x099| @x010avedam     @x099-@x222 reports a weapons average damage                        @x099|
@x099| @x002tmpAvedam  @x099-@x214 reports an average damage that is temperary(like temper)@x099|
@x099+----------------------------------------------------------------------+@w
]]
elseif param == "4" then
     helpfile = [[
@x099+-----------------------------@g[@CI@cdentify @R4@g]@x099-----------------------------+
@x099| @x010flagsenchant    @x099-@x222 only shows enchanting flags                                                  @x099|
@x099| @x010enchantsolid    @x099-@x222 pre colors the item based on solidify green for go red for no                @x099|
@x099| @x002enchantsolidyes @x099-@x214 lets you color your own solidify if you can solidify the item                @x099|
@x099| @x010enchantsolidno  @x099-@x222 lets you color your own solidify if you cant solidify the item               @x099|
@x099| @x002enchantreso     @x099-@x214 pre colors the item based on resonating green for go red for no              @x099|
@x099| @x010enchantresoyes  @x099-@x222 lets you color your own resonate if you can resonate the item                @x099|
@x099| @x002enchantresono   @x099-@x214 lets you color your own resonate if you cant resonate the item               @x099|
@x099| @x010enchantillum    @x099-@x222 pre colors the item based on illumination either green for go or red for no  @x099|
@x099| @x002enchantillumyes @x099-@x214 lets you color your own illumination if you can illuminate the item          @x099|
@x099| @x010enchantillumno  @x099-@x222 lets you color your own illumination if you cant illuminate the item         @x099|
@x099+----------------------------------------------------------------------+@w
]]
elseif param == "5" then
     helpfile = [[
@x099+-----------------------------@g[@CI@cdentify @R5@g]@x099-----------------------------+
@x099| @x010spelluse    @x099-@x222 what the first spell on a potion/scroll does           @x099|
@x099| @x002spellname   @x099-@x214 name of the first spell on a potion/scroll             @x099|
@x099| @x010spelllevel  @x099-@x222 level of the first spell on a potion/scroll            @x099|
@x099| @x002inflicts    @x099-@x214 shows temporary what the weapon inflicts               @x099|
@x099| @x010damtype     @x099-@x222 shows the damage type of a weapon                      @x099|
@x099| @x002weapontype  @x099-@x214 reports a wepons type                                  @x099|
@x099| @x010specials    @x099-@x222 reports a special flag on a weapon                     @x099|
@x099+----------------------------------------------------------------------+@w
]]
elseif param == "6" then
     helpfile = [[
@x099+-----------------------------@g[@CI@cdentify @R6@g]@x099-----------------------------+
@x099| @x010affmod            @x099-@x222 the modifiers affecting the item                 @x099|
@x099| @x002leadsto           @x099-@x214 where a portal goes                              @x099|
@x099| @x010capacity          @x099-@x222 max amount of items the container can hold       @x099|
@x099| @x002holding           @x099-@x214 how many items that are in the container         @x099|
@x099| @x010heavyitem         @x099-@x222 heaviest item in the container                   @x099|
@x099| @x002itemsinside       @x099-@x214 how many items in a container                    @x099|
@x099| @x010totweight         @x099-@x222 total weight of the container                    @x099|
@x099| @x002itemburden        @x099-@x214 shows how many items are in a container          @x099|
@x099| @x010weightred         @x099-@x222 shows weight reduction from a container          @x099|
@x099| @x002clan              @x099-@x214 reports what clan its from                       @x099|
@x099| @x002flagsall          @x099-@x214 shows all flags on the item                      @x099|
@x099| @x002<resistance name> @x099-@x214 shows resistance of an item just use its name,   @x099|
@x099+----------------------------------------------------------------------+@w
]]
elseif param == "examples" then
helpfile = [[
+---------------------------[Identify Examples]------------------------+
Default:
${BID:|bidnum}${RBID:|rbidnum}${LBID:|lbidnum}@c[@CID@w:@R${repid}@c]@w ${name} @CL@cvl@W:@R${lvl} ${@Ca@cvg@CD@cmg@W:@R|avedam} ${@Cw@cear@CL@coc@W:@R|wearable}${@CL@ceads @CTo@W:@R|leadsto} @G(${@CW@ceight@W:@R|weight}@G) @g[${@CC@capacity@W:@R|capacity}${ @CT@cot@CW@ceight@w:@R|totweight}${ @CW@ceight@CR@ceduction@W:@R|weightred}${@CH@cr@W:@R|hr}${ @CD@cr@W:@R|dr}${ @CI@cnflicts@W:@R|inflicts}${ @CS@cpecials@W:@R|specials}${@CU@cse@W:@R|spelluse}${ @CN@came@W:@R|spellname}${ @CL@cevel@W:@R|spelllevel}${ @CT@cot@CS@ctats@W:@R|totalstat}${ @CS@ctr@W:@R|str}${ @CI@cnt@W:@R|int}${ @CW@cis@W:@R|wis}${ @CD@cex@W:@R|dex}${ @CC@con@W:@R|con}${ @CL@cuck@W:@R|luck}${ @Cp@coints@W:@R|score}@g]@w @G(@w${enchantsolid}${enchantreso}${enchantillum}@G)@w

Bid Number and name only:
${BID:|bidnum}${RBID:|rbidnum}${LBID:|lbidnum} ${name} 

Stats Only (for use without autobid:
[@CID@w:@R${repid}@c]@w ${name} ${@CT@cot@CS@ctats@W:@R|totalstat}${ @CS@ctr@W:@R|str}${ @CI@cnt@W:@R|int}${ @CW@cis@W:@R|wis}${ @CD@cex@W:@R|dex}${ @CC@con@W:@R|con}${ @CL@cuck@W:@R|luck}${ @Cp@coints@W:@R|score}@g]@w

you can even get more complicated or less, if you have any questions feel free to ask!
+----------------------------------------------------------------------+
]]
else
helpfile = [[
@x086+----------------------------@G[@x051I@cdentify @WV:]]..GetPluginInfo (GetPluginID (), 19)..[[@g]@x086-------------------------+
@x086|                                                                      @x086|
@x086| @x130hid <paramaters>       @x123- @x130command to use the script                   @x086|
@x086| @x142hid channel <channel>  @x123- @x142set channel for default reporting           @x086|
@x086| @x130hid autoid             @x123- @x130toggle auto iding bids, rauction and market @x086|
@x086| @x142hid beep               @x123- @x142toggle trigger words for beeps/icon flashing@x086|
@x086| @x130hid words              @x123- @x130lets you make a list of words for idbeeps   @x086|
@x086| @x142hid <id|all> <channel> @x123- @x142Lets you see past Ids use with hid max      @x086|
@x086|                          @x142all shows all IDS                           @x086|
@x086| @x130hid max <number>       @x123- @x130change the max ids to keep in history       @x086|
@x086|                          @x130default is 20                               @x086|
@x086| @x142hid set                @x123- @x142will let you hadarmagic the output          @x086|
@x086|                          @x142type hid help 2 for a helpfile with variable@x086|
@x086| @x130hid reset              @x123- @x130sets hadarmagic output back to the default  @x086|
@x086| @x142hid fullreset          @x123- @x142resets the script to install status         @x086|
@x086| @x130hid lbid <number> [chan]@x123- @x130will output lbid item                      @x086|
@x086| @x142hid rbid <number> [chan]@x123- @x142will output a remort auction item          @x086|
@x086| @x130hid bid <number> [chan] @x123- @x130will output an item up for auction         @x086|
@x086|                                                                      @x086|
@x086|                                                                      @x086|
@x086| @cTo Customize the script please read the following@w:                   @x086|
@x086| @x130hid help 2 - @x130shows the second helpfile with all the variables        @x086|
@x086| @x142hid help 3 - @x142shows the third helpfile with variables                 @x086|
@x086| @x130hid help 4 - @x130shows the fourth helpfile with variables                @x086|
@x086| @x142hid help 5 - @x142shows the fifth helpfile with variables                 @x086|
@x086| @x130hid help 6 - @x130shows the sixth helpfile with variables                 @x086|
@x086| @x142hid help examples - @x142shows the second helpfile with all the variables @x086|
@x086|                                                                      @x086|
@x086| @WIf you have any issues please contact me via note/tell or on discord @x086|
@x086+----------------------------------------------------------------------+@w]]
end
hadarprint(helpfile)
end


]]>
</script> 

</muclient>
